# -*- coding: utf-8 -*-
"""Student Management System.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Tg-OYI2WQf3WEdy9U4JggwvPGQyAoRRw
"""

class Student:
    def __init__(self, student_id, name, program, age, gpa):
        self.id = student_id
        self.name = name
        self.program = program
        self.age = age
        self.gpa = gpa
        self.next = None

class StudentPortal:
    def __init__(self):
        self.start = None

    def add(self):
        size = int(input("Enter the number of students you want to add: "))
        if size < 1:
            print("Incorrect input, please provide a valid number.")
            return

        for i in range(size):
            print(f"\nEnter the following details for student {i+1}:")
            student_id = int(input("Student ID: "))
            name = input("Full Name: ")
            program = input("Program: ")
            age = int(input("Age: "))
            gpa = float(input("GPA: "))

            new_student = Student(student_id, name, program, age, gpa)

            if self.start is None:
                self.start = new_student
            else:
                temp = self.start
                while temp.next:
                    temp = temp.next
                temp.next = new_student

    def display(self):
        if self.start is None:
            print("The record is empty.")
        else:
            print("\n--- Student Records ---")
            temp = self.start
            while temp:
                print(f"\nStudent ID: {temp.id}")
                print(f"Full Name: {temp.name}")
                print(f"Program: {temp.program}")
                print(f"Age: {temp.age}")
                print(f"GPA: {temp.gpa:.2f}")
                temp = temp.next

    def search(self):
        if self.start is None:
            print("The list is empty.")
            return
        sid = int(input("Enter the Student ID to search: "))
        temp = self.start
        while temp:
            if temp.id == sid:
                print("\nStudent details found:")
                print(f"Student ID: {temp.id}")
                print(f"Full Name: {temp.name}")
                print(f"Program: {temp.program}")
                print(f"Age: {temp.age}")
                print(f"GPA: {temp.gpa:.2f}")
                return
            temp = temp.next
        print(f"The student with ID {sid} was not found.")

    def update(self):
        if self.start is None:
            print("The list is empty.")
            return
        sid = int(input("Enter the Student ID to update: "))
        temp = self.start
        while temp:
            if temp.id == sid:
                print("\nEnter the new details:")
                temp.id = int(input("Student ID: "))
                temp.name = input("Full Name: ")
                temp.program = input("Program: ")
                temp.age = int(input("Age: "))
                temp.gpa = float(input("GPA: "))
                print("Student details updated successfully.")
                return
            temp = temp.next
        print(f"The student with ID {sid} was not found.")

    def delete_student(self):
        if self.start is None:
            print("The list is empty.")
            return
        sid = int(input("Enter the Student ID to delete: "))
        temp = self.start
        prev = None

        while temp and temp.id != sid:
            prev = temp
            temp = temp.next

        if temp is None:
            print(f"The student with ID {sid} was not found.")
        else:
            if prev is None:
                self.start = temp.next
            else:
                prev.next = temp.next
            print(f"Student with ID {sid} deleted successfully.")

    def delete_all(self):
        self.start = None
        print("All records have been deleted.")

    def average_gpa(self):
        if self.start is None:
            print("The record is empty.")
            return
        count = 0
        total_gpa = 0
        temp = self.start
        while temp:
            total_gpa += temp.gpa
            count += 1
            temp = temp.next
        avg = total_gpa / count if count else 0
        print(f"The average GPA is: {avg:.2f}")


# Main Menu
def main():
    portal = StudentPortal()
    while True:
        print("\n--- STUDENT INFORMATION PORTAL ---")
        print("1. Add student information")
        print("2. Search student information")
        print("3. Update student information")
        print("4. Calculate average GPA")
        print("5. Display all records")
        print("6. Delete a student")
        print("7. Delete all records")
        print("8. Exit")
        choice = input("Enter your choice: ")

        if choice == '1':
            portal.add()
        elif choice == '2':
            portal.search()
        elif choice == '3':
            portal.update()
        elif choice == '4':
            portal.average_gpa()
        elif choice == '5':
            portal.display()
        elif choice == '6':
            portal.delete_student()
        elif choice == '7':
            portal.delete_all()
        elif choice == '8':
            print("Exiting... Goodbye!")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()